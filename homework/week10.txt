1. Literature
    - Effective Java 2 Edition
    - Head First Patterns
    - Head First Object-Oriented Analysis and Design

2. Tasks
    **************************************************
    Coding Test for Java developers:
    CODING TEST
    -----------
    Implement a solution to the following problem in Java. We are looking for clean, well-factored, OO code.
    You do not need to provide any form of persistence in this program. Your project should contain some way of
    running automated tests to prove it works, whether you use jUnit or some other way is up to you.
    The program should be an API. You can opt to put a user interface on it or not, but we will only be looking at the
    API portion.
    Here are the requirements:
    Consider a grocery market where items have prices per unit but also volume prices. For example, doughnuts may be
    $1.25 each or 3 for $3 dollars.
    Implement a point-of-sale scanning API that accepts an arbitrary ordering of products (similar to what would happen
    when actually at a checkout line) then returns the correct total price for an entire shopping cart based on the per
    unit prices or the volume prices as applicable.
    Here are the products listed by code and the prices to use (there is no sales tax):
    Product Code Price
    ------------ -----
    A $1.25 each or 3 for $3.00
    B $4.25
    C $1.00 or $5 for a six pack
    D $0.75
    The interface at the top level PointOfSaleTerminal service object should look something like this. You are free to
    design/implement the rest of the code however you wish, including how you specify the prices in the system:
    PointOfSaleTerminal terminal = new PointOfSaleTerminal();
    terminal.setPricing(...);
    terminal.scan("A");
    terminal.scan("C");
    ... etc.
    BigDecimal result = terminal.calculateTotal();
    Here are the minimal inputs you should use for your test cases. These test cases must be shown to work in your
    program:
    Scan these items in this order: ABCDABA; Verify the total price is $13.25.
    Scan these items in this order: CCCCCCC; Verify the total price is $6.00.
    Scan these items in this order: ABCD; Verify the total price is $7.25
    **************************************************

    Web UI interface
    -Cтраница для внесение данных сотрудников.
    	Имя, Фамилия - обязательно(с валидацией)
    	Телефон , адрес - необязательно
    	Название департамента - обязательно(выпадающий список, данные подтягиваются из базы)

    -Cтраница для отображения, редактирование и удаления данных
    			(таблица данных должна быть разбит по страницам. по 5 записей)


    Серверная сторона
                Принимать новые данные и занесение их базу данных. Редактирование и удаление данных.

    Технологии
                Обязательно использование Spring, Hibirnate
    			MySQL 5.х +,
                Tomcat 5.5 +,
                JDK 1.5.х  +,
                HTML/CSS,
                 прочие (на выбор).

    С уважением,


    **************************************************************************************
    Необходимо реализовать http-сервер на фреймворке netty
    (http://netty.io/), со следующим функционалом:

    1. По запросу на http://somedomain/hello отдает «Hello World» через 10 секунд

    2. По запросу на http://somedomain/redirect?url=<url> происходит
    переадресация на указанный url

    3. По запросу на http://somedomain/status выдается статистика:

    - общее количество запросов

    - количество уникальных запросов (по одному на IP)

    - счетчик запросов на каждый IP в виде таблицы с колонкам и IP,
    кол-во запросов, время последнего запроса

    - количество переадресаций по url'ам в виде таблицы, с колонками
    url, кол-во переадресация

    - количество соединений, открытых в данный момент

    - в виде таблицы лог из 16 последних обработанных соединений, колонки
    src_ip, URI, timestamp, sent_bytes, received_bytes, speed (bytes/sec)

    Все это (вместе с особенностями имплементации в текстовом виде)
    выложить на github, приложить к этому:

    - инструкции как билдить и запускать приложение

    - скриншоты как выглядят станицы /status в рабочем приложении

    - скриншот результата выполнения команды ab –c 100 –n 10000
    http://somedomain/status

    - еще один скриншот станицы /status, но уже после выполнение команды
    ab из предыдущего пункта"

    Комментарии:

    - использовать самую последнюю стабильную версию нетти

    - обратить внимание на многопоточность

    - разобраться в EventLoop’ами


    *********************************************************
    Find minimum in Tree(not sorted)

    *********************************************************
    process factorial from 100
    dont use BigInteger, BigDecimial
    _ _ _ _ _ _ _ _
    ********************************************************
